/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as KitchenRouteImport } from './routes/kitchen'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AdminTablesRouteImport } from './routes/admin/tables'
import { Route as AdminStaffRouteImport } from './routes/admin/staff'
import { Route as AdminSettingsRouteImport } from './routes/admin/settings'
import { Route as AdminServerRouteImport } from './routes/admin/server'
import { Route as AdminReportsRouteImport } from './routes/admin/reports'
import { Route as AdminMenuRouteImport } from './routes/admin/menu'
import { Route as AdminKitchenRouteImport } from './routes/admin/kitchen'
import { Route as AdminIngredientsRouteImport } from './routes/admin/ingredients'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AdminCounterRouteImport } from './routes/admin/counter'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const KitchenRoute = KitchenRouteImport.update({
  id: '/kitchen',
  path: '/kitchen',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminTablesRoute = AdminTablesRouteImport.update({
  id: '/tables',
  path: '/tables',
  getParentRoute: () => AdminRoute,
} as any)
const AdminStaffRoute = AdminStaffRouteImport.update({
  id: '/staff',
  path: '/staff',
  getParentRoute: () => AdminRoute,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdminRoute,
} as any)
const AdminServerRoute = AdminServerRouteImport.update({
  id: '/server',
  path: '/server',
  getParentRoute: () => AdminRoute,
} as any)
const AdminReportsRoute = AdminReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => AdminRoute,
} as any)
const AdminMenuRoute = AdminMenuRouteImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => AdminRoute,
} as any)
const AdminKitchenRoute = AdminKitchenRouteImport.update({
  id: '/kitchen',
  path: '/kitchen',
  getParentRoute: () => AdminRoute,
} as any)
const AdminIngredientsRoute = AdminIngredientsRouteImport.update({
  id: '/ingredients',
  path: '/ingredients',
  getParentRoute: () => AdminRoute,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AdminRoute,
} as any)
const AdminCounterRoute = AdminCounterRouteImport.update({
  id: '/counter',
  path: '/counter',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/kitchen': typeof KitchenRoute
  '/login': typeof LoginRoute
  '/admin/counter': typeof AdminCounterRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/ingredients': typeof AdminIngredientsRoute
  '/admin/kitchen': typeof AdminKitchenRoute
  '/admin/menu': typeof AdminMenuRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/server': typeof AdminServerRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/staff': typeof AdminStaffRoute
  '/admin/tables': typeof AdminTablesRoute
  '/admin/': typeof AdminIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/kitchen': typeof KitchenRoute
  '/login': typeof LoginRoute
  '/admin/counter': typeof AdminCounterRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/ingredients': typeof AdminIngredientsRoute
  '/admin/kitchen': typeof AdminKitchenRoute
  '/admin/menu': typeof AdminMenuRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/server': typeof AdminServerRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/staff': typeof AdminStaffRoute
  '/admin/tables': typeof AdminTablesRoute
  '/admin': typeof AdminIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/kitchen': typeof KitchenRoute
  '/login': typeof LoginRoute
  '/admin/counter': typeof AdminCounterRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/ingredients': typeof AdminIngredientsRoute
  '/admin/kitchen': typeof AdminKitchenRoute
  '/admin/menu': typeof AdminMenuRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/server': typeof AdminServerRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/staff': typeof AdminStaffRoute
  '/admin/tables': typeof AdminTablesRoute
  '/admin/': typeof AdminIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/kitchen'
    | '/login'
    | '/admin/counter'
    | '/admin/dashboard'
    | '/admin/ingredients'
    | '/admin/kitchen'
    | '/admin/menu'
    | '/admin/reports'
    | '/admin/server'
    | '/admin/settings'
    | '/admin/staff'
    | '/admin/tables'
    | '/admin/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/kitchen'
    | '/login'
    | '/admin/counter'
    | '/admin/dashboard'
    | '/admin/ingredients'
    | '/admin/kitchen'
    | '/admin/menu'
    | '/admin/reports'
    | '/admin/server'
    | '/admin/settings'
    | '/admin/staff'
    | '/admin/tables'
    | '/admin'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/kitchen'
    | '/login'
    | '/admin/counter'
    | '/admin/dashboard'
    | '/admin/ingredients'
    | '/admin/kitchen'
    | '/admin/menu'
    | '/admin/reports'
    | '/admin/server'
    | '/admin/settings'
    | '/admin/staff'
    | '/admin/tables'
    | '/admin/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  KitchenRoute: typeof KitchenRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/kitchen': {
      id: '/kitchen'
      path: '/kitchen'
      fullPath: '/kitchen'
      preLoaderRoute: typeof KitchenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/tables': {
      id: '/admin/tables'
      path: '/tables'
      fullPath: '/admin/tables'
      preLoaderRoute: typeof AdminTablesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/staff': {
      id: '/admin/staff'
      path: '/staff'
      fullPath: '/admin/staff'
      preLoaderRoute: typeof AdminStaffRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/server': {
      id: '/admin/server'
      path: '/server'
      fullPath: '/admin/server'
      preLoaderRoute: typeof AdminServerRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/reports': {
      id: '/admin/reports'
      path: '/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminReportsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/menu': {
      id: '/admin/menu'
      path: '/menu'
      fullPath: '/admin/menu'
      preLoaderRoute: typeof AdminMenuRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/kitchen': {
      id: '/admin/kitchen'
      path: '/kitchen'
      fullPath: '/admin/kitchen'
      preLoaderRoute: typeof AdminKitchenRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/ingredients': {
      id: '/admin/ingredients'
      path: '/ingredients'
      fullPath: '/admin/ingredients'
      preLoaderRoute: typeof AdminIngredientsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/counter': {
      id: '/admin/counter'
      path: '/counter'
      fullPath: '/admin/counter'
      preLoaderRoute: typeof AdminCounterRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminCounterRoute: typeof AdminCounterRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminIngredientsRoute: typeof AdminIngredientsRoute
  AdminKitchenRoute: typeof AdminKitchenRoute
  AdminMenuRoute: typeof AdminMenuRoute
  AdminReportsRoute: typeof AdminReportsRoute
  AdminServerRoute: typeof AdminServerRoute
  AdminSettingsRoute: typeof AdminSettingsRoute
  AdminStaffRoute: typeof AdminStaffRoute
  AdminTablesRoute: typeof AdminTablesRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminCounterRoute: AdminCounterRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminIngredientsRoute: AdminIngredientsRoute,
  AdminKitchenRoute: AdminKitchenRoute,
  AdminMenuRoute: AdminMenuRoute,
  AdminReportsRoute: AdminReportsRoute,
  AdminServerRoute: AdminServerRoute,
  AdminSettingsRoute: AdminSettingsRoute,
  AdminStaffRoute: AdminStaffRoute,
  AdminTablesRoute: AdminTablesRoute,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  KitchenRoute: KitchenRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
